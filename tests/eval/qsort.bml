val rec qsort xs = match xs with
  | []      -> []
  | x :: xs ->
      open Int in
      List.flatten
      [ qsort $ List.filter (fun y -> y < x) xs
      , [x]
      , qsort $ List.filter (fun y -> Bool.not $ y < x) xs
      ]
end

val show_list =
  open Pretty in
  let val rec go xs = match xs with
    | []      -> ""
    | x :: [] -> Int.show x
    | x :: xs -> Int.show x <> "," <+> go xs
  end
  in
  go >>> fun s -> "[" <> s <> "]"

val _ : list unit =
  List.map (print_endline <<< show_list <<< qsort)
  [ []
  , [0]
  , [1]
  , [1, 2]
  , [2, 1]
  , [4, 2, 7]
  , [14, 2, 70]
  , [518, 433, 41, 1023, 495, 298, 515, 191, 664, 486, 736]
  , [104, 644, 332, 86, 583, 25, 567, 352, 658, 516, 1021]
  , [957, 954, 948, 506, 628, 334, 99, 97]
  , [521, 912, 829, 994, 950, 564, 10]
  , [812, 32, 588, 483, 731, 325, 821, 68, 718, 581, 997]
  , [521, 130, 191, 774, 539, 442, 336, 186, 223, 166, 433]
  , [1, 405]
  , [771, 962, 1001, 563, 975, 71, 182, 984, 37, 515, 586]
  , [710, 719, 570, 561, 719, 506, 931, 260, 649, 707]
  , [386, 858, 772, 601, 680, 704, 299]
  , [832, 832, 651, 109, 847, 1015, 988, 831, 482, 999, 384, 84]
  , [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
  , [1, 1, 2, 3, 3, 4]
  , [44, 22, 44, 22, 1, 5, 837, 0]
  ]
